From ee48f50922a05404fa95eba93abe0c8594311123 Mon Sep 17 00:00:00 2001
From: Michael Brown <producer@holotronic.dk>
Date: Thu, 31 May 2018 18:08:43 +0200
Subject: [PATCH 21/33] Add missing .ops to synthpcm5102 codec

Signed-off-by: Michael Brown <producer@holotronic.dk>
---
 sound/soc/codecs/hsynthpcm5102.c | 93 ++++++++++++++++++++++++--------
 1 file changed, 72 insertions(+), 21 deletions(-)

diff --git a/sound/soc/codecs/hsynthpcm5102.c b/sound/soc/codecs/hsynthpcm5102.c
index 9791ae3c9608..414414670f15 100644
--- a/sound/soc/codecs/hsynthpcm5102.c
+++ b/sound/soc/codecs/hsynthpcm5102.c
@@ -27,32 +27,83 @@ static const struct snd_soc_dapm_route hsynthpcm5102_routes[] = {
 
 static int hsynthpcm5102_set_dai_fmt(struct snd_soc_dai *dai, unsigned int fmt)
 {
-    switch (fmt & SND_SOC_DAIFMT_MASTER_MASK) {
-    case SND_SOC_DAIFMT_CBS_CFS:
-        break;
-    default:
-        return -EINVAL;
-    }
-
-    switch (fmt & SND_SOC_DAIFMT_INV_MASK) {
-    case SND_SOC_DAIFMT_NB_NF:
-        break;
-    default:
-        return -EINVAL;
-    }
-
-    switch (fmt & SND_SOC_DAIFMT_FORMAT_MASK) {
-    case SND_SOC_DAIFMT_I2S:
-    case SND_SOC_DAIFMT_DSP_A:
-        break;
-    default:
-        return -EINVAL;
-    }
+//     switch (fmt & SND_SOC_DAIFMT_MASTER_MASK) {
+//     case SND_SOC_DAIFMT_CBS_CFS:
+//         break;
+//     default:
+//         return -EINVAL;
+//     }
+//
+//     switch (fmt & SND_SOC_DAIFMT_INV_MASK) {
+//     case SND_SOC_DAIFMT_NB_NF:
+//         break;
+//     default:
+//         return -EINVAL;
+//     }
+//
+//     switch (fmt & SND_SOC_DAIFMT_FORMAT_MASK) {
+//     case SND_SOC_DAIFMT_I2S:
+//     case SND_SOC_DAIFMT_DSP_A:
+//         break;
+//     default:
+//         return -EINVAL;
+//     }
 
     return 0;
 }
 
+static int hsynthpcm5102_hw_params(struct snd_pcm_substream *substream,
+                            struct snd_pcm_hw_params *params,
+                            struct snd_soc_dai *dai)
+{
+//     struct snd_soc_codec *codec = dai->codec;
+//     struct wm8731_priv *wm8731 = snd_soc_codec_get_drvdata(codec);
+//     u16 iface = snd_soc_read(codec, WM8731_IFACE) & 0xfff3;
+//     int i = get_coeff(wm8731->sysclk, params_rate(params));
+//     u16 srate = (coeff_div[i].sr << 2) |
+//     (coeff_div[i].bosr << 1) | coeff_div[i].usb;
+//
+//     wm8731->playback_fs = params_rate(params);
+//
+//     snd_soc_write(codec, WM8731_SRATE, srate);
+//
+//     /* bit size */
+//     switch (params_width(params)) {
+//         case 16:
+//             break;
+//         case 20:
+//             iface |= 0x0004;
+//             break;
+//         case 24:
+//             iface |= 0x0008;
+//             break;
+//         case 32:
+//             iface |= 0x000c;
+//             break;
+//     }
+//
+//     wm8731_set_deemph(codec);
+//
+//     snd_soc_write(codec, WM8731_IFACE, iface);
+    return 0;
+}
+
+static int hsynthpcm5102_startup(struct snd_pcm_substream *substream,
+                           struct snd_soc_dai *dai)
+{
+//     struct wm8731_priv *wm8731 = snd_soc_codec_get_drvdata(dai->codec);
+//
+//     if (wm8731->constraints)
+//         snd_pcm_hw_constraint_list(substream->runtime, 0,
+//                                    SNDRV_PCM_HW_PARAM_RATE,
+//                                    wm8731->constraints);
+
+        return 0;
+}
+
 static const struct snd_soc_dai_ops hsynthpcm5102_dai_ops = {
+    .startup	= hsynthpcm5102_startup,
+    .hw_params	= hsynthpcm5102_hw_params,
     .set_fmt = hsynthpcm5102_set_dai_fmt,
 };
 
-- 
2.17.1

