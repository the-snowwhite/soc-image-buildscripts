From baa74fced58fdd3d6a63631de7ccfaaed601b007 Mon Sep 17 00:00:00 2001
From: Michael Brown <producer@holotronic.dk>
Date: Sat, 2 Jun 2018 22:56:31 +0200
Subject: [PATCH 23/34] Add builtin audio codec driver for DE1/DE10 SoC
 (wm8731) Add Audio and framebuffer Supporting device trees xga and hd
 versions

Signed-off-by: Michael Brown <producer@holotronic.dk>
---
 arch/arm/boot/dts/Makefile                    |   2 +
 .../dts/socfpga_cyclone5_de1_soc_aud_fb.dts   | 194 ++++++++++++++
 .../socfpga_cyclone5_de1_soc_aud_fb_hd.dts    | 194 ++++++++++++++
 arch/arm/configs/socfpga_defconfig            |   3 +-
 sound/soc/socsynth/Kconfig                    |   9 +-
 sound/soc/socsynth/Makefile                   |   5 +-
 sound/soc/socsynth/de1x-soc-wm8731.c          | 251 ++++++++++++++++++
 7 files changed, 655 insertions(+), 3 deletions(-)
 create mode 100644 arch/arm/boot/dts/socfpga_cyclone5_de1_soc_aud_fb.dts
 create mode 100644 arch/arm/boot/dts/socfpga_cyclone5_de1_soc_aud_fb_hd.dts
 create mode 100644 sound/soc/socsynth/de1x-soc-wm8731.c

diff --git a/arch/arm/boot/dts/Makefile b/arch/arm/boot/dts/Makefile
index 748b0684137c..cd54d8e8f8fe 100644
--- a/arch/arm/boot/dts/Makefile
+++ b/arch/arm/boot/dts/Makefile
@@ -705,6 +705,8 @@ dtb-$(CONFIG_ARCH_SOCFPGA) += \
 	socfpga_cyclone5_de10_nano_uio_aud_fbii_hd.dtb \
 	socfpga_cyclone5_de10_nano.dtb \
 	socfpga_cyclone5_de1_soc.dtb \
+	socfpga_cyclone5_de1_soc_aud_fb.dtb \
+	socfpga_cyclone5_de1_soc_aud_fb_hd.dtb \
 	socfpga_cyclone5_de1_soc_fbii.dtb \
 	socfpga_cyclone5_sockit.dtb \
 	socfpga_cyclone5_socrates.dtb \
diff --git a/arch/arm/boot/dts/socfpga_cyclone5_de1_soc_aud_fb.dts b/arch/arm/boot/dts/socfpga_cyclone5_de1_soc_aud_fb.dts
new file mode 100644
index 000000000000..4fb724a505c7
--- /dev/null
+++ b/arch/arm/boot/dts/socfpga_cyclone5_de1_soc_aud_fb.dts
@@ -0,0 +1,194 @@
+/*
+ *  Copyright (C) 2013 Steffen Trumtrar <s.trumtrar@pengutronix.de>
+ *  Copyright (C) 2016 Stephen Arnold <nerdboy@gentoo.org>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include "socfpga_cyclone5.dtsi"
+
+/ {
+	model = "Terasic DE1-SoC";
+	compatible = "altr,socfpga-cyclone5", "altr,socfpga";
+
+	chosen {
+		bootargs = "earlyprintk";
+		stdout-path = "serial0:115200n8";
+	};
+
+	memory {
+		name = "memory";
+		device_type = "memory";
+		reg = <0x0 0x40000000>; /* 1GB */
+	};
+
+	aliases {
+		ethernet0 = &gmac1;
+	};
+
+	regulator_3_3v: 3-3-v-regulator {
+		compatible = "regulator-fixed";
+		regulator-name = "3.3V";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+	};
+
+	leds {
+		compatible = "gpio-leds";
+		hps0 {
+			label = "hps_led0";
+			gpios = <&portb 24 0>;
+			linux,default-trigger = "heartbeat";
+		};
+	};
+
+	keys {
+		compatible = "gpio-keys";
+		hps0 {
+			label = "hps_key0";
+			gpios = <&portb 25 0>;
+			linux,code = <63>;
+			debounce-interval = <50>;
+		};
+	};
+
+	sound {
+		compatible = "opencores,de1soc-wm8731-audio";
+		i2s-controller = <&i2s>;
+		audio-codec = <&wm8731>;
+		i2c-mux-gpio = <&portb 19 0>;
+	};
+
+	clk48: clk48 {
+		compatible = "fixed-clock";
+		#clock-cells = <0>;
+		clock-frequency  = <24576000>;
+		clock-output-names = "clk48";
+	};
+
+	clk44: clk44 {
+		compatible = "fixed-clock";
+		#clock-cells = <0>;
+		clock-frequency  = <33868800>;
+		clock-output-names = "clk44";
+	};
+
+	i2s: i2s@0x0 {
+		#sound-dai-cells = <1>;
+		compatible = "opencores,i2s";
+		reg = <0xff200000 0x20>, <0xff200020 0x20>;
+		clocks = <&clk44>, <&clk48>;
+		clock-names = "clk44", "clk48";
+		dmas = <&pdma 0>, <&pdma 1>;
+		dma-names = "tx", "rx";
+	};
+
+	bridge@0xc0000000 {
+		compatible = "altr,bridge-15.1", "simple-bus";
+		reg = <0xc0000000 0x20000000 0xff200000 0x200000>;
+		bridge-enable = <1>;
+		#address-cells = <0x2>;
+		#size-cells = <0x1>;
+		ranges = <0x00000001 0x00001000 0xff201000 0x00000008>,
+			<0x00000001 0x00031000 0xff231000 0x00000080>;
+
+		sysid@0x100001000 {
+			compatible = "altr,sysid-15.1", "altr,sysid-1.0";
+			reg = <0x00000001 0x00001000 0x00000008>;
+			id = <2899645186>;
+			timestamp = <1524157570>;
+		};
+
+		vip@0x100031000 {
+			compatible = "altr,vip-frame-reader-1.0", "ALTR,vip-frame-reader-14.0";
+			reg = <0x00000001 0x00031000 0x00000080>;
+			max-width = <1024>;
+			max-height = <768>;
+			bits-per-color = <0x8>;
+			colors-per-beat = <0x4>;
+			beats-per-pixel = <0x1>;
+			mem-word-width = <0x80>;
+		};
+	};
+};
+
+&gmac1 {
+	status = "okay";
+	phy-mode = "rgmii";
+
+	txd0-skew-ps = <0>; /* -420ps */
+	txd1-skew-ps = <0>; /* -420ps */
+	txd2-skew-ps = <0>; /* -420ps */
+	txd3-skew-ps = <0>; /* -420ps */
+	rxd0-skew-ps = <420>; /* 0ps */
+	rxd1-skew-ps = <420>; /* 0ps */
+	rxd2-skew-ps = <420>; /* 0ps */
+	rxd3-skew-ps = <420>; /* 0ps */
+	txen-skew-ps = <0>; /* -420ps */
+	txc-skew-ps = <1860>; /* 960ps */
+	rxdv-skew-ps = <420>; /* 0ps */
+	rxc-skew-ps = <1680>; /* 780ps */
+
+	max-frame-size = <3800>;
+};
+
+&gpio0 {
+	status = "okay";
+};
+
+&gpio1 {
+	status = "okay";
+};
+
+&gpio2 {
+	status = "okay";
+};
+
+&i2c0 {
+	status = "okay";
+	speed-mode = <0>;
+
+	wm8731: wm8731@34 {
+		#sound-dai-cells = <0>;
+		compatible = "wlf,wm8731";
+		reg = <0x1a>;
+	};
+
+	adxl345: adxl345@0 {
+		compatible = "adi,adxl345";
+		reg = <0x53>;
+
+		interrupt-parent = <&portc>;
+		interrupts = <3 2>;
+	};
+};
+
+&i2c1 {
+	status = "okay";
+	speed-mode = <0>;
+};
+
+&mmc0 {
+	vmmc-supply = <&regulator_3_3v>;
+	vqmmc-supply = <&regulator_3_3v>;
+	status = "okay";
+};
+
+&uart0 {
+	status = "okay";
+};
+
+&usb1 {
+	status = "okay";
+};
diff --git a/arch/arm/boot/dts/socfpga_cyclone5_de1_soc_aud_fb_hd.dts b/arch/arm/boot/dts/socfpga_cyclone5_de1_soc_aud_fb_hd.dts
new file mode 100644
index 000000000000..ecebb6e9cd19
--- /dev/null
+++ b/arch/arm/boot/dts/socfpga_cyclone5_de1_soc_aud_fb_hd.dts
@@ -0,0 +1,194 @@
+/*
+ *  Copyright (C) 2013 Steffen Trumtrar <s.trumtrar@pengutronix.de>
+ *  Copyright (C) 2016 Stephen Arnold <nerdboy@gentoo.org>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include "socfpga_cyclone5.dtsi"
+
+/ {
+	model = "Terasic DE1-SoC";
+	compatible = "altr,socfpga-cyclone5", "altr,socfpga";
+
+	chosen {
+		bootargs = "earlyprintk";
+		stdout-path = "serial0:115200n8";
+	};
+
+	memory {
+		name = "memory";
+		device_type = "memory";
+		reg = <0x0 0x40000000>; /* 1GB */
+	};
+
+	aliases {
+		ethernet0 = &gmac1;
+	};
+
+	regulator_3_3v: 3-3-v-regulator {
+		compatible = "regulator-fixed";
+		regulator-name = "3.3V";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+	};
+
+	leds {
+		compatible = "gpio-leds";
+		hps0 {
+			label = "hps_led0";
+			gpios = <&portb 24 0>;
+			linux,default-trigger = "heartbeat";
+		};
+	};
+
+	keys {
+		compatible = "gpio-keys";
+		hps0 {
+			label = "hps_key0";
+			gpios = <&portb 25 0>;
+			linux,code = <63>;
+			debounce-interval = <50>;
+		};
+	};
+
+	sound {
+		compatible = "opencores,de1soc-wm8731-audio";
+		i2s-controller = <&i2s>;
+		audio-codec = <&wm8731>;
+		i2c-mux-gpio = <&portb 19 0>;
+	};
+
+	clk48: clk48 {
+		compatible = "fixed-clock";
+		#clock-cells = <0>;
+		clock-frequency  = <24576000>;
+		clock-output-names = "clk48";
+	};
+
+	clk44: clk44 {
+		compatible = "fixed-clock";
+		#clock-cells = <0>;
+		clock-frequency  = <33868800>;
+		clock-output-names = "clk44";
+	};
+
+	i2s: i2s@0x0 {
+		#sound-dai-cells = <1>;
+		compatible = "opencores,i2s";
+		reg = <0xff200000 0x20>, <0xff200020 0x20>;
+		clocks = <&clk44>, <&clk48>;
+		clock-names = "clk44", "clk48";
+		dmas = <&pdma 0>, <&pdma 1>;
+		dma-names = "tx", "rx";
+	};
+
+	bridge@0xc0000000 {
+		compatible = "altr,bridge-15.1", "simple-bus";
+		reg = <0xc0000000 0x20000000 0xff200000 0x200000>;
+		bridge-enable = <1>;
+		#address-cells = <0x2>;
+		#size-cells = <0x1>;
+		ranges = <0x00000001 0x00001000 0xff201000 0x00000008>,
+			<0x00000001 0x00031000 0xff231000 0x00000080>;
+
+		sysid@0x100001000 {
+			compatible = "altr,sysid-15.1", "altr,sysid-1.0";
+			reg = <0x00000001 0x00001000 0x00000008>;
+			id = <2899645186>;
+			timestamp = <1524157570>;
+		};
+
+		vip@0x100031000 {
+			compatible = "altr,vip-frame-reader-1.0", "ALTR,vip-frame-reader-14.0";
+			reg = <0x00000001 0x00031000 0x00000080>;
+			max-width = <1920>;
+			max-height = <1080>;
+			bits-per-color = <0x8>;
+			colors-per-beat = <0x4>;
+			beats-per-pixel = <0x1>;
+			mem-word-width = <0x80>;
+		};
+	};
+};
+
+&gmac1 {
+	status = "okay";
+	phy-mode = "rgmii";
+
+	txd0-skew-ps = <0>; /* -420ps */
+	txd1-skew-ps = <0>; /* -420ps */
+	txd2-skew-ps = <0>; /* -420ps */
+	txd3-skew-ps = <0>; /* -420ps */
+	rxd0-skew-ps = <420>; /* 0ps */
+	rxd1-skew-ps = <420>; /* 0ps */
+	rxd2-skew-ps = <420>; /* 0ps */
+	rxd3-skew-ps = <420>; /* 0ps */
+	txen-skew-ps = <0>; /* -420ps */
+	txc-skew-ps = <1860>; /* 960ps */
+	rxdv-skew-ps = <420>; /* 0ps */
+	rxc-skew-ps = <1680>; /* 780ps */
+
+	max-frame-size = <3800>;
+};
+
+&gpio0 {
+	status = "okay";
+};
+
+&gpio1 {
+	status = "okay";
+};
+
+&gpio2 {
+	status = "okay";
+};
+
+&i2c0 {
+	status = "okay";
+	speed-mode = <0>;
+
+	wm8731: wm8731@34 {
+		#sound-dai-cells = <0>;
+		compatible = "wlf,wm8731";
+		reg = <0x1a>;
+	};
+
+	adxl345: adxl345@0 {
+		compatible = "adi,adxl345";
+		reg = <0x53>;
+
+		interrupt-parent = <&portc>;
+		interrupts = <3 2>;
+	};
+};
+
+&i2c1 {
+	status = "okay";
+	speed-mode = <0>;
+};
+
+&mmc0 {
+	vmmc-supply = <&regulator_3_3v>;
+	vqmmc-supply = <&regulator_3_3v>;
+	status = "okay";
+};
+
+&uart0 {
+	status = "okay";
+};
+
+&usb1 {
+	status = "okay";
+};
diff --git a/arch/arm/configs/socfpga_defconfig b/arch/arm/configs/socfpga_defconfig
index 25f92bd18920..4917bafcd7ae 100644
--- a/arch/arm/configs/socfpga_defconfig
+++ b/arch/arm/configs/socfpga_defconfig
@@ -308,7 +308,8 @@ CONFIG_SND_SOC_SSM2602=m
 CONFIG_SND_SOC_SSM2602_I2C=m
 CONFIG_SND_ALOOP=m
 CONFIG_SND_VIRMIDI=m
-CONFIG_SND_SOC_DE1_WM8731_HSYNTH=m
+CONFIG_SND_SOC_DE1x_WM8731=m
+CONFIG_SND_SOC_DE1x_WM8731_HSYNTH=m
 CONFIG_SND_SOC_HSYNTH_MIDI=m
 CONFIG_SND_SOC_PCM5102A=m
 CONFIG_SND_SOC_PCM5102_HSYNTH=m
diff --git a/sound/soc/socsynth/Kconfig b/sound/soc/socsynth/Kconfig
index 5d71a4ee1f62..b6b7dec7364c 100644
--- a/sound/soc/socsynth/Kconfig
+++ b/sound/soc/socsynth/Kconfig
@@ -16,7 +16,7 @@ config SND_SOC_HSYNTHDMA
          This driver can also be built as a module.  If so, the module
          will be called hsynthdma.
 
-config SND_SOC_DE1_WM8731_HSYNTH
+config SND_SOC_DE1x_WM8731_HSYNTH
        tristate "DE1-Audio MIDI support"
        select SND_SOC_WM8731
        select SND_SOC_OC_I2S
@@ -34,3 +34,10 @@ config SND_SOC_PCM5102_HSYNTH
        select SND_SOC_OC_I2S
        select SND_SOC_GENERIC_DMAENGINE_PCM
        select REGMAP_MMIO
+
+config SND_SOC_DE1x_WM8731
+       tristate "DE1x-Builtin-Audio support"
+       select SND_SOC_WM8731
+       select SND_SOC_OC_I2S
+       select SND_SOC_GENERIC_DMAENGINE_PCM
+       select REGMAP_MMIO
diff --git a/sound/soc/socsynth/Makefile b/sound/soc/socsynth/Makefile
index 2043f43d0400..69fb2aa3b284 100644
--- a/sound/soc/socsynth/Makefile
+++ b/sound/soc/socsynth/Makefile
@@ -2,7 +2,7 @@ snd-soc-opencores_i2s-objs := opencores_i2s.o
 obj-$(CONFIG_SND_SOC_OC_I2S) += snd-soc-opencores_i2s.o
 
 snd-de1-soc-wm8731-hsynth-objs := de1-soc-wm8731-hsynth.o
-obj-$(CONFIG_SND_SOC_DE1_WM8731_HSYNTH) += snd-de1-soc-wm8731-hsynth.o
+obj-$(CONFIG_SND_SOC_DE1x_WM8731_HSYNTH) += snd-de1-soc-wm8731-hsynth.o
 
 snd-soc-hsynthdma-objs := hsynthdma.o
 obj-$(CONFIG_SND_SOC_HSYNTHDMA) += snd-soc-hsynthdma.o
@@ -12,3 +12,6 @@ obj-$(CONFIG_SND_SOC_HSYNTH_MIDI) += snd-soc-hsynth-midi.o
 
 snd-pcm5102-hsynth-objs := pcm5102-hsynth.o
 obj-$(CONFIG_SND_SOC_PCM5102_HSYNTH) += snd-pcm5102-hsynth.o
+
+snd-soc-de1x-soc-wm8731-objs := de1x-soc-wm8731.o
+obj-$(CONFIG_SND_SOC_DE1x_WM8731) += snd-soc-de1x-soc-wm8731.o
diff --git a/sound/soc/socsynth/de1x-soc-wm8731.c b/sound/soc/socsynth/de1x-soc-wm8731.c
new file mode 100644
index 000000000000..e297ef4b0c0c
--- /dev/null
+++ b/sound/soc/socsynth/de1x-soc-wm8731.c
@@ -0,0 +1,251 @@
+/*
+ * de1-soc-wm8731 -- SoC audio for Terasic DE1-SoC board
+ * Author: B. Steinsbo <bsteinsbo@gmail.com>
+ *
+ * Based on sam9g20_wm8731 by
+ * Sedji Gaouaou <sedji.gaouaou@atmel.com>
+ *
+ * Licensed under the GPL-2.
+ */
+
+#include <linux/module.h>
+#include <linux/kernel.h>
+#include <linux/clk.h>
+#include <linux/platform_device.h>
+#include <linux/of.h>
+#include <linux/gpio.h>
+#include <linux/of_gpio.h>
+#include <linux/uaccess.h>
+#include <linux/ioport.h>
+#include <linux/io.h>
+
+#include <sound/core.h>
+#include <sound/pcm.h>
+#include <sound/pcm_params.h>
+#include <sound/soc.h>
+#include <sound/initval.h>
+
+#define WM8731_SYSCLK_XTAL 1
+#define WM8731_SYSCLK_MCLK 2
+#define MCLK_RATE_48K 12288000 /* fs*256 */
+#define MCLK_RATE_44K 16934400 /* fs*384 */
+
+static unsigned int i2c_mux_gpio;
+
+static int de1soc_hw_params(struct snd_pcm_substream *substream,
+	struct snd_pcm_hw_params *params)
+{
+	struct snd_soc_pcm_runtime *rtd = substream->private_data;
+	struct snd_soc_dai *codec_dai = rtd->codec_dai;
+	struct device *dev = rtd->card->dev;
+	unsigned int mclk_freq;
+	int ret;
+
+	if ((params_rate(params) % 44100) == 0) {
+		mclk_freq = MCLK_RATE_44K;
+	} else if ((params_rate(params) % 48000) == 0) {
+		mclk_freq = MCLK_RATE_48K;
+	} else
+		return -EINVAL;
+
+	/* set codec mclk configuration */
+	ret = snd_soc_dai_set_sysclk(codec_dai, WM8731_SYSCLK_MCLK,
+		mclk_freq, SND_SOC_CLOCK_OUT);
+	if (ret < 0)
+		return ret;
+
+	dev_dbg(dev, "hw_params: mclk_freq=%d\n", mclk_freq);
+	return 0;
+}
+
+static void de1soc_shutdown(struct snd_pcm_substream *substream)
+{
+	struct snd_soc_pcm_runtime *rtd = substream->private_data;
+	struct snd_soc_dai *codec_dai = rtd->codec_dai;
+	struct device *dev = rtd->card->dev;
+	int ret;
+
+	dev_dbg(dev, "shutdown\n");
+	ret = snd_soc_dai_set_sysclk(codec_dai, WM8731_SYSCLK_MCLK,
+		0, SND_SOC_CLOCK_OUT);
+	if (ret < 0) {
+		dev_err(dev, "Failed to reset WM8731 SYSCLK: %d\n", ret);
+	}
+}
+
+static struct snd_soc_ops de1soc_ops = {
+	// .startup
+	.shutdown = de1soc_shutdown,
+	.hw_params = de1soc_hw_params,
+	// .hw_free
+	// .prepare
+	// .trigger
+};
+
+static const struct snd_soc_dapm_widget de1soc_dapm_widgets[] = {
+	SND_SOC_DAPM_HP("Headphone Jack", NULL),
+	SND_SOC_DAPM_MIC("Microphone Jack", NULL),
+	SND_SOC_DAPM_LINE("Line In Jack", NULL),
+	SND_SOC_DAPM_LINE("Line Out Jack", NULL),
+};
+
+static const struct snd_soc_dapm_route intercon[] = {
+	{"MICIN", NULL, "Mic Bias"},
+	{"Mic Bias", NULL, "Microphone Jack"},
+	{"LLINEIN", NULL, "Line In Jack"},
+	{"RLINEIN", NULL, "Line In Jack"},
+	{"Line Out Jack", NULL, "LOUT"},
+	{"Line Out Jack", NULL, "ROUT"},
+	{"Headphone Jack", NULL, "LHPOUT"},
+	{"Headphone Jack", NULL, "RHPOUT"},
+};
+
+static int de1soc_wm8731_init(struct snd_soc_pcm_runtime *rtd)
+{
+	struct snd_soc_dai *codec_dai = rtd->codec_dai;
+	struct snd_soc_dai *cpu_dai = rtd->cpu_dai;
+	struct device *dev = rtd->card->dev;
+	unsigned int fmt;
+	int ret;
+
+	dev_dbg(dev, "init\n");
+
+	fmt = SND_SOC_DAIFMT_I2S | SND_SOC_DAIFMT_NB_NF |
+	      SND_SOC_DAIFMT_CBS_CFS;
+
+	/* set cpu DAI configuration */
+	ret = snd_soc_dai_set_fmt(cpu_dai, fmt);
+	if (ret < 0)
+		return ret;
+
+	/* set codec DAI configuration */
+	ret = snd_soc_dai_set_fmt(codec_dai, fmt);
+	if (ret < 0)
+		return ret;
+
+	/* Don't let codec constraints interfere */
+	ret = snd_soc_dai_set_sysclk(codec_dai, WM8731_SYSCLK_MCLK,
+		0, SND_SOC_CLOCK_OUT);
+	if (ret < 0) {
+		dev_err(dev, "Failed to set WM8731 SYSCLK: %d\n", ret);
+		return ret;
+	}
+
+	return 0;
+}
+
+static struct snd_soc_dai_link de1soc_dai = {
+	.name = "WM8731",
+	.stream_name = "WM8731 PCM",
+	.cpu_dai_name = "ff200000.i2s",
+	.codec_dai_name = "wm8731-hifi",
+	.init = de1soc_wm8731_init,
+	.platform_name = "de1soc",
+	.codec_name = "wm8731.0-001a",
+	.ops = &de1soc_ops,
+};
+
+static struct snd_soc_card snd_soc_de1soc = {
+	.name = "DE1SOC-WM8731",
+	.owner = THIS_MODULE,
+	.dai_link = &de1soc_dai,
+	.num_links = 1,
+
+	.dapm_widgets = de1soc_dapm_widgets,
+	.num_dapm_widgets = ARRAY_SIZE(de1soc_dapm_widgets),
+	.dapm_routes = intercon,
+	.num_dapm_routes = ARRAY_SIZE(intercon),
+};
+
+static int de1soc_audio_probe(struct platform_device *pdev)
+{
+	struct device_node *np = pdev->dev.of_node;
+	struct device_node *codec_np, *cpu_np;
+	struct snd_soc_card *card = &snd_soc_de1soc;
+	int ret;
+
+	if (!np) {
+		return -ENODEV;
+	}
+
+	card->dev = &pdev->dev;
+
+	/* I2C bus is muxed between HPS and FPGA. Set mux to HPS */
+	i2c_mux_gpio = of_get_named_gpio(np, "i2c-mux-gpio", 0);
+	if (gpio_is_valid(i2c_mux_gpio)) {
+		ret = devm_gpio_request_one(&pdev->dev,
+			i2c_mux_gpio, GPIOF_OUT_INIT_LOW, "I2C_MUX");
+		if (ret) {
+			dev_err(&pdev->dev,
+				"Failed to request GPIO_%d for i2c_mux: %d\n",
+				i2c_mux_gpio, ret);
+			return ret;
+		}
+		gpio_set_value(i2c_mux_gpio, 1);
+	}
+
+	/* Parse codec info */
+	de1soc_dai.codec_name = NULL;
+	codec_np = of_parse_phandle(np, "audio-codec", 0);
+	if (!codec_np) {
+		dev_err(&pdev->dev, "codec info missing\n");
+		return -EINVAL;
+	}
+	de1soc_dai.codec_of_node = codec_np;
+
+	/* Parse dai and platform info */
+	de1soc_dai.cpu_dai_name = NULL;
+	de1soc_dai.platform_name = NULL;
+	cpu_np = of_parse_phandle(np, "i2s-controller", 0);
+	if (!cpu_np) {
+		dev_err(&pdev->dev, "dai and pcm info missing\n");
+		return -EINVAL;
+	}
+	de1soc_dai.cpu_of_node = cpu_np;
+	de1soc_dai.platform_of_node = cpu_np;
+
+	of_node_put(codec_np);
+	of_node_put(cpu_np);
+
+	ret = snd_soc_register_card(card);
+	if (ret) {
+		dev_err(&pdev->dev, "snd_soc_register_card() failed\n");
+	}
+
+	return ret;
+}
+
+static int de1soc_audio_remove(struct platform_device *pdev)
+{
+	struct snd_soc_card *card = platform_get_drvdata(pdev);
+
+	if (gpio_is_valid(i2c_mux_gpio))
+		devm_gpio_free(&pdev->dev, i2c_mux_gpio);
+
+	snd_soc_unregister_card(card);
+
+	return 0;
+}
+
+static const struct of_device_id de1soc_wm8731_dt_ids[] = {
+	{ .compatible = "opencores,de1soc-wm8731-audio", },
+	{ }
+};
+MODULE_DEVICE_TABLE(of, de1soc_wm8731_dt_ids);
+
+static struct platform_driver de1soc_audio_driver = {
+	.driver = {
+		.name	= "de1soc-audio",
+		.owner	= THIS_MODULE,
+		.of_match_table = of_match_ptr(de1soc_wm8731_dt_ids),
+	},
+	.probe	= de1soc_audio_probe,
+	.remove	= de1soc_audio_remove,
+};
+
+module_platform_driver(de1soc_audio_driver);
+
+/* Module information */
+MODULE_AUTHOR("Bjarne Steinsbo <bsteinsbo@gmail.com>");
+MODULE_DESCRIPTION("ALSA SoC DE1-SoC_WM8731");
+MODULE_LICENSE("GPL");
-- 
2.17.1

